<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" 
	xmlns:netsuite="http://www.mulesoft.org/schema/mule/netsuite" 
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" 
	xmlns:sfdc="http://www.mulesoft.org/schema/mule/sfdc" 
	xmlns="http://www.mulesoft.org/schema/mule/core" 
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
	xmlns:spring="http://www.springframework.org/schema/beans" 
	version="EE-3.7.1" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/sfdc http://www.mulesoft.org/schema/mule/sfdc/current/mule-sfdc.xsd
http://www.mulesoft.org/schema/mule/netsuite http://www.mulesoft.org/schema/mule/netsuite/current/mule-netsuite.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    
    <batch:job name="syncCustomerToAccountBatch" max-failed-records="1">
        <batch:threading-profile poolExhaustedAction="WAIT"/>
        <batch:process-records>
            <batch:step name="forEachCustomerInNetsuiteGetAccountFromSalesforceStep">

				<dw:transform-message doc:name="Transform Customer to Account">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	AccountNumber : payload.accountNumber,
	Fax : payload.fax,
	Phone : payload.phone,
	Name : payload.companyName when (payload.companyName != null) otherwise (payload.firstName ++ ((" " ++ payload.lastName) when payload.firstName != null otherwise payload.lastName)),
	Website : payload.url
	
}]]></dw:set-payload>
                </dw:transform-message>
                <enricher doc:name="store account Id to the payload['Id']" source="#[payload == null ? null : payload.Id]" target="#[payload['Id']]">
                    <sfdc:query-single config-ref="Salesforce" query="SELECT Id, Name, LastModifiedDate FROM Account WHERE (Name = '#[payload['companyName']]')" doc:name="Get Account from Salesforce"/>

                </enricher>
            </batch:step>
            <batch:step name="forEachAccountToBeUpsertedInSalesforceA" >

                <batch:commit size="200" doc:name="Batch Commit">

                    <sfdc:upsert config-ref="Salesforce" externalIdFieldName="Id" type="Account" doc:name="Upsert Accounts in Salesforce">
                        <sfdc:objects ref="#[payload]"/>
                    </sfdc:upsert>
                    <logger message="Upsert: #[payload]" level="INFO" doc:name="Log upsert result"/>
                </batch:commit>

            </batch:step>
        </batch:process-records>
        <batch:on-complete>
            <json:object-to-json-transformer doc:name="Transform BatchJobInstance to JSON"/>
            <logger message="Migration process has finished: #[payload]" level="INFO" doc:name="Log 'Migration process has finished'"/>

        </batch:on-complete>
    </batch:job>
</mule>
